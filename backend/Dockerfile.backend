# Use base image with Java
FROM openjdk:21-bullseye

# Install Node.js 18.x and other dependencies
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update && apt-get install -y \
    gcc \
    g++ \
    python3 \
    python3-pip \
    nodejs \
    php-cli \
    ruby-full \
    golang \
    bash \
    curl \
    sudo \
    perl \
    lua5.4 \
    r-base \
    clang \
    libicu67 \
    fpc \
    unzip && \
    apt-get clean

# Dart
RUN curl -s https://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-x64-release.zip -o dart.zip && \
    unzip dart.zip -d /opt/dart && \
    ln -s /opt/dart/dart-sdk/bin/dart /usr/bin/dart && \
    ln -s /opt/dart/dart-sdk/bin/dart /usr/local/bin/dart && \
    rm dart.zip

# TypeScript
RUN npm install -g typescript@latest ts-node@latest

# Install Swift
RUN curl -LO https://download.swift.org/swift-5.9.1-release/ubuntu2204/swift-5.9.1-RELEASE/swift-5.9.1-RELEASE-ubuntu22.04.tar.gz && \
    tar xzf swift-5.9.1-RELEASE-ubuntu22.04.tar.gz -C /opt && \
    rm swift-5.9.1-RELEASE-ubuntu22.04.tar.gz

# Set PATH for Swift
ENV PATH="/opt/swift-5.9.1-RELEASE-ubuntu22.04/usr/bin:$PATH"

# Add non-root user
RUN useradd -m sandbox && echo "sandbox ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
USER sandbox
WORKDIR /app

# Copy the Spring Boot app JAR file
COPY --chown=sandbox:sandbox target/compiler-backend-0.0.1-SNAPSHOT.jar app.jar

# Expose the application port
EXPOSE 5050

# Default command to run the Spring Boot app
CMD ["java", "-jar", "app.jar"]
